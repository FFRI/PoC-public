//
// (c) FFRI Security, Inc., 2023 / Author: FFRI Security, Inc.
//
import AVFoundation

class AudioSnap: NSObject, AVCaptureFileOutputRecordingDelegate {
    var audioFileOutput: AVCaptureAudioFileOutput?
    var session: AVCaptureSession?

    func record() {
        let device = AVCaptureDevice.default(for: AVMediaType.audio)
        self.session = AVCaptureSession()

        do {
            let input = try AVCaptureDeviceInput(device: device!)
            self.audioFileOutput = AVCaptureAudioFileOutput()

            self.session?.addInput(input)
            self.session?.addOutput(self.audioFileOutput!)

            self.session?.startRunning()
            self.audioFileOutput?.startRecording(to: URL(fileURLWithPath: "/tmp/output.m4a"), outputFileType: .m4a, recordingDelegate: self)

            DispatchQueue.main.asyncAfter(deadline: .now() + 15) {
                self.stopRecording()
            }
        } catch {
            print("Error getting input device: \(error)")
        }
    }

    func stopRecording() {
        print("stopRecording")
        self.audioFileOutput?.stopRecording()
    }

    func fileOutput(_ output: AVCaptureFileOutput,
                    didFinishRecordingTo outputFileURL: URL, 
                    from connections: [AVCaptureConnection], 
                    error: Error?) {
        self.session?.stopRunning()
        exit(0)
    }
}

let audioSnap = AudioSnap()
audioSnap.record()
RunLoop.current.run()
